{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navya Gupta\\\\tour-management\\\\frontend\\\\src\\\\Shared\\\\searchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Autocomplete } from \"@react-google-maps/api\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./searchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"400px\",\n  width: \"100%\"\n};\nconst center = {\n  lat: 40.748817,\n  lng: -73.985428\n};\nconst SearchBar = () => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(null);\n  const onLoad = autocomplete => {\n    console.log(\"autocomplete: \", autocomplete);\n    setLocation(autocomplete);\n  };\n  const onPlaceChanged = () => {\n    if (location !== null) {\n      console.log(location.getPlace());\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n      libraries: libraries,\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        onLoad: onLoad,\n        onPlaceChanged: onPlaceChanged,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a location\",\n          style: {\n            boxSizing: `border-box`,\n            border: `1px solid transparent`,\n            width: `240px`,\n            height: `32px`,\n            padding: `0 12px`,\n            borderRadius: `3px`,\n            boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n            fontSize: `14px`,\n            outline: `none`,\n            textOverflow: `ellipses`,\n            position: \"absolute\",\n            left: \"50%\",\n            marginLeft: \"-120px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: center,\n        zoom: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: date => setSelectedDate(date),\n        dateFormat: \"MMMM d, yyyy\",\n        placeholderText: \"Select a date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"nxWcR8r7Sm8sNQCsa+bmL81yaD4=\");\n_c = SearchBar;\nexport default SearchBar;\n\n// const SearchBar = () => {\n//   return <div>SearchBar</div>;\n// };\n\n// export default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Autocomplete","DatePicker","libraries","mapContainerStyle","height","width","center","lat","lng","SearchBar","location","setLocation","selectedDate","setSelectedDate","onLoad","autocomplete","console","log","onPlaceChanged","getPlace","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","marginLeft","date"],"sources":["C:/Users/Navya Gupta/tour-management/frontend/src/Shared/searchBar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleMap, LoadScript, Autocomplete } from \"@react-google-maps/api\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./searchBar.css\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst center = {\r\n  lat: 40.748817,\r\n  lng: -73.985428,\r\n};\r\n\r\nconst SearchBar = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const onLoad = (autocomplete) => {\r\n    console.log(\"autocomplete: \", autocomplete);\r\n    setLocation(autocomplete);\r\n  };\r\n\r\n  const onPlaceChanged = () => {\r\n    if (location !== null) {\r\n      console.log(location.getPlace());\r\n    } else {\r\n      console.log(\"Autocomplete is not loaded yet!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoadScript\r\n        googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\"\r\n        libraries={libraries}\r\n      >\r\n        <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter a location\"\r\n            style={{\r\n              boxSizing: `border-box`,\r\n              border: `1px solid transparent`,\r\n              width: `240px`,\r\n              height: `32px`,\r\n              padding: `0 12px`,\r\n              borderRadius: `3px`,\r\n              boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n              fontSize: `14px`,\r\n              outline: `none`,\r\n              textOverflow: `ellipses`,\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              marginLeft: \"-120px\",\r\n            }}\r\n          />\r\n        </Autocomplete>\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          center={center}\r\n          zoom={10}\r\n        />\r\n      </LoadScript>\r\n      <div>\r\n        <DatePicker\r\n          selected={selectedDate}\r\n          onChange={(date) => setSelectedDate(date)}\r\n          dateFormat=\"MMMM d, yyyy\"\r\n          placeholderText=\"Select a date\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n\r\n// const SearchBar = () => {\r\n//   return <div>SearchBar</div>;\r\n// };\r\n\r\n// export default SearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,YAAY,QAAQ,wBAAwB;AAC5E,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,OAAO,iBAAiB;AAAC;AAEzB,MAAMC,SAAS,GAAG,CAAC,QAAQ,CAAC;AAC5B,MAAMC,iBAAiB,GAAG;EACxBC,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMiB,MAAM,GAAIC,YAAY,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,YAAY,CAAC;IAC3CJ,WAAW,CAACI,YAAY,CAAC;EAC3B,CAAC;EAED,MAAMG,cAAc,GAAG,MAAM;IAC3B,IAAIR,QAAQ,KAAK,IAAI,EAAE;MACrBM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACS,QAAQ,EAAE,CAAC;IAClC,CAAC,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,UAAU;MACT,gBAAgB,EAAC,0BAA0B;MAC3C,SAAS,EAAEf,SAAU;MAAA,wBAErB,QAAC,YAAY;QAAC,MAAM,EAAEY,MAAO;QAAC,cAAc,EAAEI,cAAe;QAAA,uBAC3D;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,kBAAkB;UAC9B,KAAK,EAAE;YACLE,SAAS,EAAG,YAAW;YACvBC,MAAM,EAAG,uBAAsB;YAC/BhB,KAAK,EAAG,OAAM;YACdD,MAAM,EAAG,MAAK;YACdkB,OAAO,EAAG,QAAO;YACjBC,YAAY,EAAG,KAAI;YACnBC,SAAS,EAAG,8BAA6B;YACzCC,QAAQ,EAAG,MAAK;YAChBC,OAAO,EAAG,MAAK;YACfC,YAAY,EAAG,UAAS;YACxBC,QAAQ,EAAE,UAAU;YACpBC,IAAI,EAAE,KAAK;YACXC,UAAU,EAAE;UACd;QAAE;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACW,eACf,QAAC,SAAS;QACR,iBAAiB,EAAE3B,iBAAkB;QACrC,MAAM,EAAEG,MAAO;QACf,IAAI,EAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QACT;IAAA;MAAA;MAAA;MAAA;IAAA,QACS,eACb;MAAA,uBACE,QAAC,UAAU;QACT,QAAQ,EAAEM,YAAa;QACvB,QAAQ,EAAGmB,IAAI,IAAKlB,eAAe,CAACkB,IAAI,CAAE;QAC1C,UAAU,EAAC,cAAc;QACzB,eAAe,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA;IAC/B;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA5DItB,SAAS;AAAA,KAATA,SAAS;AA8Df,eAAeA,SAAS;;AAExB;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}